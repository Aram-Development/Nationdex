# Comprehensive Dependabot configuration for Ballsdex project
# This configuration enables continuous monitoring, automatic security updates,
# and detailed vulnerability reporting for all supported package ecosystems

version: 2

# Configure update schedules and security monitoring for all ecosystems
updates:
  # Python dependencies (Poetry/pip ecosystem)
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "daily"
      time: "06:00"
      timezone: "UTC"
    # Enable all dependency types including low-risk vulnerabilities
    allow:
      - dependency-type: "all"
    # Configure security update grouping
    groups:
      python-security:
        applies-to: security-updates
        patterns:
          - "*"
      python-minor-patch:
        applies-to: version-updates
        update-types:
          - "minor"
          - "patch"
      python-major:
        applies-to: version-updates
        update-types:
          - "major"
    # Set high limits to catch all vulnerabilities
    open-pull-requests-limit: 20
    # Enable automatic rebasing
    rebase-strategy: "auto"
    # Add detailed commit messages
    commit-message:
      prefix: "deps"
      prefix-development: "deps-dev"
      include: "scope"
    # Configure reviewers for security awareness
    reviewers:
      - "ballsdex-team"
    # Add labels for easy identification
    labels:
      - "dependencies"
      - "security"
      - "python"

  # Docker dependencies
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "06:00"
      timezone: "UTC"
    allow:
      - dependency-type: "all"
    groups:
      docker-security:
        applies-to: security-updates
        patterns:
          - "*"
      docker-updates:
        applies-to: version-updates
        patterns:
          - "*"
    open-pull-requests-limit: 10
    rebase-strategy: "auto"
    commit-message:
      prefix: "docker"
      include: "scope"
    reviewers:
      - "ballsdex-team"
    labels:
      - "dependencies"
      - "security"
      - "docker"
      - "docker-compose"

  # GitHub Actions dependencies
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "06:00"
      timezone: "UTC"
    allow:
      - dependency-type: "all"
    groups:
      actions-security:
        applies-to: security-updates
        patterns:
          - "*"
      actions-updates:
        applies-to: version-updates
        patterns:
          - "*"
    open-pull-requests-limit: 10
    rebase-strategy: "auto"
    commit-message:
      prefix: "ci"
      include: "scope"
    reviewers:
      - "ballsdex-team"
    labels:
      - "dependencies"
      - "security"
      - "github-actions"
      - "ci"



  # Admin panel Python dependencies (separate monitoring)
  - package-ecosystem: "pip"
    directory: "/admin_panel"
    schedule:
      interval: "daily"
      time: "07:00"
      timezone: "UTC"
    allow:
      - dependency-type: "all"
    groups:
      admin-security:
        applies-to: security-updates
        patterns:
          - "django*"
          - "*security*"
          - "*auth*"
          - "*"
      admin-django:
        applies-to: version-updates
        patterns:
          - "django*"
        update-types:
          - "patch"
          - "minor"
      admin-other:
        applies-to: version-updates
        patterns:
          - "*"
        update-types:
          - "patch"
    open-pull-requests-limit: 15
    rebase-strategy: "auto"
    commit-message:
      prefix: "admin"
      prefix-development: "admin-dev"
      include: "scope"
    reviewers:
      - "ballsdex-team"
    labels:
      - "dependencies"
      - "security"
      - "admin-panel"
      - "django"

# Global configuration for enhanced security monitoring
# Note: Additional security features are configured at repository level:
# - Dependabot alerts: Enabled for all vulnerability severities
# - Dependabot security updates: Enabled with automatic PR creation
# - Dependency graph: Enabled for comprehensive dependency tracking
# - Security advisories: Monitored for all ecosystems
# - Vulnerability database: GitHub Advisory Database + npm audit + PyUp.io

# Security update priorities:
# 1. Critical and High severity vulnerabilities: Immediate updates
# 2. Medium severity vulnerabilities: Daily monitoring
# 3. Low severity vulnerabilities: Weekly monitoring
# 4. All dependency updates: Scheduled based on ecosystem

# Monitoring coverage:
# - Python: pyproject.toml, poetry.lock, requirements files
# - Docker: Dockerfile, docker-compose.yml
# - GitHub Actions: .github/workflows/*.yml
# - Pre-commit hooks: .pre-commit-config.yaml
# - Development dependencies: All dev/test packages included

# Reporting and notifications:
# - Pull requests created for all vulnerability levels
# - Detailed commit messages with security context
# - Automatic labeling for easy triage
# - Team reviewers assigned for security awareness
# - Integration with GitHub Security tab for centralized monitoring